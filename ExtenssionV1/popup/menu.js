// Récupère les éléments du menu
var scanTypeSelect = document.getElementById("scan-type");
var startScanButton = document.getElementById("start-scan");

console.log('Avant l\'appel à checkSecurityHeaders');

// Associe une fonction à l'événement de clic sur le bouton
startScanButton.addEventListener("click", function() {
  var selectedScanType = scanTypeSelect.value;
  // Appelle la fonction appropriée en fonction du type de scan sélectionné
  if (selectedScanType === "xss") {
    performXssScan();
  } else if (selectedScanType === "sql-injection") {
    performSqlInjectionScan();
  } else if (selectedScanType === "session-management") {
    performSessionManagementScan();
  } else if (selectedScanType === "security-headers") { // Ajout de la condition pour la vérification des en-têtes de sécurité
    checkSecurityHeaders();
  }
});

// Fonctions de scan pour chaque type de scan
function performXssScan() {
  // Logique de scan pour les vulnérabilités XSS
  console.log("Scan de vulnérabilités XSS en cours...");
}

function performSqlInjectionScan() {
  // Logique de scan pour les injections SQL
  console.log("Scan d'injections SQL en cours...");
}

function performSessionManagementScan() {
  // Logique de scan pour les failles de gestion des sessions
  console.log("Scan de failles de gestion des sessions en cours...");
}

// Fonction pour effectuer la vérification des en-têtes de sécurité
function checkSecurityHeaders() {
  console.log('Après l\'appel à checkSecurityHeaders');
  const currentUrl = window.location.href;
  const proxyUrl = 'http://localhost:3000/?target=';

  fetch(proxyUrl + encodeURIComponent(currentUrl))
    .then(response => response.headers)
    .then(headers => {
      // Vérification des en-têtes de sécurité
      const xssProtection = headers.get('X-XSS-Protection');
      const contentTypeOptions = headers.get('X-Content-Type-Options');
      const strictTransportSecurity = headers.get('Strict-Transport-Security');
      const contentSecurityPolicy = headers.get('Content-Security-Policy');

      // Génération du rapport
      const report = {
        'X-XSS-Protection': xssProtection,
        'X-Content-Type-Options': contentTypeOptions,
        'Strict-Transport-Security': strictTransportSecurity,
        'Content-Security-Policy': contentSecurityPolicy
      };

      // Création des éléments HTML pour afficher le rapport
      const reportContainer = document.createElement('div');
      reportContainer.innerHTML = '<h2>Rapport de vérification des en-têtes de sécurité :</h2>';

      const reportList = document.createElement('ul');
      for (const header in report) {
        const listItem = document.createElement('li');
        listItem.innerText = `${header}: ${report[header]}`;
        reportList.appendChild(listItem);
      }

      reportContainer.appendChild(reportList);

      // Affichage du rapport dans une fenêtre du navigateur
      document.body.appendChild(reportContainer);
    })
    .catch(error => {
      console.error('Une erreur s\'est produite lors de la vérification des en-têtes de sécurité :', error);
    });
}
